//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
[System.ServiceModel.ServiceContractAttribute( ConfigurationName = "IService1" )]
public interface IService1
{

    [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/IService1/Convert", ReplyAction = "http://tempuri.org/IService1/ConvertResponse" )]
    string Convert( string content );

    [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/IService1/Convert", ReplyAction = "http://tempuri.org/IService1/ConvertResponse" )]
    System.Threading.Tasks.Task<string> ConvertAsync( string content );
}

[System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
public interface IService1Channel: IService1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
public partial class Service1Client: System.ServiceModel.ClientBase<IService1>, IService1
{

    public Service1Client()
    {
    }

    public Service1Client( string endpointConfigurationName ) :
            base( endpointConfigurationName )
    {
    }

    public Service1Client( string endpointConfigurationName, string remoteAddress ) :
            base( endpointConfigurationName, remoteAddress )
    {
    }

    public Service1Client( string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress ) :
            base( endpointConfigurationName, remoteAddress )
    {
    }

    public Service1Client( System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress ) :
            base( binding, remoteAddress )
    {
    }

    public string Convert( string content )
    {
        return base.Channel.Convert( content );
    }

    public System.Threading.Tasks.Task<string> ConvertAsync( string content )
    {
        return base.Channel.ConvertAsync( content );
    }
}
